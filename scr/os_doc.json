{
  "info": {
    "description": "<p>Documentation for the Lua os standard library.</p>\n<p>From <a href=\"https://www.lua.org/manual/5.1/\">Lua 5.1 Reference Manual</a>\nby Roberto Ierusalimschy, Luiz Henrique de Figueiredo, Waldemar Celes.</p>\n<p>Copyright &copy; 2006-2012 Lua.org, PUC-Rio.</p>\n<p>Freely available under the terms of the <a href=\"https://www.lua.org/license.html\">Lua license</a>.</p>", 
    "namespace": "os", 
    "name": "Os", 
    "brief": "<p>Lua os standard library</p>"
  }, 
  "elements": [
    {
      "replaces": "", 
      "description": "<p>Returns an approximation of the amount in seconds of CPU time\nused by the program.</p>", 
      "parameters": [], 
      "returnvalues": [], 
      "brief": "<p>amount of elapsed/CPU time used (depending on OS)</p>", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "type": "FUNCTION", 
      "name": "os.clock"
    }, 
    {
      "replaces": "", 
      "description": "<p>Returns a string or a table containing date and time,\nformatted according to the given string format.</p>\n<p>If the time argument is present,\nthis is the time to be formatted\n(see the os.time function for a description of this value).\nOtherwise, date formats the current time.</p>\n<p>If format starts with '!',\nthen the date is formatted in Coordinated Universal Time.\nAfter this optional character,\nif format is the string \"*t\",\nthen date returns a table with the following fields:\nyear (four digits), month (1--12), day (1--31),\nhour (0--23), min (0--59), sec (0--61),\nwday (weekday, Sunday is 1),\nyday (day of the year),\nand isdst (daylight saving flag, a boolean).</p>\n<p>If format is not \"*t\",\nthen date returns the date as a string,\nformatted according to the same rules as the C function strftime.</p>\n<p>When called without arguments,\ndate returns a reasonable date and time representation that depends on\nthe host system and on the current locale\n(that is, <code>os.date()</code> is equivalent to <code>os.date(\"%c\")</code>).</p>", 
      "parameters": [
        {
          "doc": "", 
          "name": "[format]"
        }, 
        {
          "doc": "", 
          "name": "[time]"
        }
      ], 
      "returnvalues": [], 
      "brief": "<p>formats a date/time string</p>", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "type": "FUNCTION", 
      "name": "os.date"
    }, 
    {
      "replaces": "", 
      "description": "<p>Returns the number of seconds from time t1 to time t2.\nIn POSIX, Windows, and some other systems,\nthis value is exactly t2-t1.</p>", 
      "parameters": [
        {
          "doc": "", 
          "name": "t2"
        }, 
        {
          "doc": "", 
          "name": "t1"
        }
      ], 
      "returnvalues": [], 
      "brief": "<p>calculates a time difference in seconds</p>", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "type": "FUNCTION", 
      "name": "os.difftime"
    }, 
    {
      "replaces": "", 
      "description": "<p>This function is equivalent to the C function system.\nIt passes command to be executed by an operating system shell.\nIt returns a status code, which is system-dependent.\nIf command is absent, then it returns nonzero if a shell is available\nand zero otherwise.</p>", 
      "parameters": [
        {
          "doc": "", 
          "name": "[command]"
        }
      ], 
      "returnvalues": [], 
      "brief": "<p>executes an operating system command</p>", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "type": "FUNCTION", 
      "name": "os.execute"
    }, 
    {
      "replaces": "", 
      "description": "<p>Calls the C function exit,\nwith an optional code,\nto terminate the host program.\nThe default value for code is the success code.</p>", 
      "parameters": [
        {
          "doc": "", 
          "name": "[code]"
        }
      ], 
      "returnvalues": [], 
      "brief": "<p>attempts to terminate the process</p>", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "type": "FUNCTION", 
      "name": "os.exit"
    }, 
    {
      "replaces": "", 
      "description": "<p>Returns the value of the process environment variable varname,\nor <span class=\"type\"> nil</span> if the variable is not defined.</p>", 
      "parameters": [
        {
          "doc": "", 
          "name": "varname"
        }
      ], 
      "returnvalues": [], 
      "brief": "<p>returns an operating system environment variable</p>", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "type": "FUNCTION", 
      "name": "os.getenv"
    }, 
    {
      "replaces": "", 
      "description": "<p>Deletes the file or directory with the given name.\nDirectories must be empty to be removed.\nIf this function fails, it returns <span class=\"type\"> nil</span>,\nplus a string describing the error.</p>", 
      "parameters": [
        {
          "doc": "", 
          "name": "filename"
        }
      ], 
      "returnvalues": [], 
      "brief": "<p>deletes a file</p>", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "type": "FUNCTION", 
      "name": "os.remove"
    }, 
    {
      "replaces": "", 
      "description": "<p>Renames file or directory named oldname to newname.\nIf this function fails, it returns <span class=\"type\"> nil</span>,\nplus a string describing the error.</p>", 
      "parameters": [
        {
          "doc": "", 
          "name": "oldname"
        }, 
        {
          "doc": "", 
          "name": "newname"
        }
      ], 
      "returnvalues": [], 
      "brief": "<p>renames a file</p>", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "type": "FUNCTION", 
      "name": "os.rename"
    }, 
    {
      "replaces": "", 
      "description": "<p>Sets the current locale of the program.\nlocale is a string specifying a locale;\ncategory is an optional string describing which category to change:\n<code>\"all\"</code>, <code>\"collate\"</code>, <code>\"ctype\"</code>,\n<code>\"monetary\"</code>, <code>\"numeric\"</code>, or <code>\"time\"</code>;\nthe default category is <code>\"all\"</code>.\nThe function returns the name of the new locale,\nor <span class=\"type\"> nil</span> if the request cannot be honored.</p>\n<p>If locale is the empty string,\nthe current locale is set to an implementation-defined native locale.\nIf locale is the string \"C\",\nthe current locale is set to the standard C locale.</p>\n<p>When called with <span class=\"type\"> nil</span> as the first argument,\nthis function only returns the name of the current locale\nfor the given category.</p>", 
      "parameters": [
        {
          "doc": "", 
          "name": "locale"
        }, 
        {
          "doc": "", 
          "name": "[category]"
        }
      ], 
      "returnvalues": [], 
      "brief": "<p>sets the current locale to the supplied locale</p>", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "type": "FUNCTION", 
      "name": "os.setlocale"
    }, 
    {
      "replaces": "", 
      "description": "<p>Returns the current time when called without arguments,\nor a time representing the date and time specified by the given table.\nThis table must have fields year, month, and day,\nand may have fields hour, min, sec, and isdst\n(for a description of these fields, see the os.date function).</p>\n<p>The returned value is a number, whose meaning depends on your system.\nIn POSIX, Windows, and some other systems, this number counts the number\nof seconds since some given start time (the \"epoch\").\nIn other systems, the meaning is not specified,\nand the number returned by time can be used only as an argument to\ndate and difftime.</p>", 
      "parameters": [
        {
          "doc": "", 
          "name": "[table]"
        }
      ], 
      "returnvalues": [], 
      "brief": "<p>returns the current time or calculates the time in seconds from a table</p>", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "type": "FUNCTION", 
      "name": "os.time"
    }, 
    {
      "replaces": "", 
      "description": "<p>Returns a string with a file name that can\nbe used for a temporary file.\nThe file must be explicitly opened before its use\nand explicitly removed when no longer needed.</p>\n<p>On some systems (POSIX),\nthis function also creates a file with that name,\nto avoid security risks.\n(Someone else might create the file with wrong permissions\nin the time between getting the name and creating the file.)\nYou still have to open the file to use it\nand to remove it (even if you do not use it).</p>\n<p>When possible,\nyou may prefer to use io.tmpfile,\nwhich automatically removes the file when the program ends.</p>", 
      "parameters": [], 
      "returnvalues": [], 
      "brief": "<p>returns a name for a temporary file</p>", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "type": "FUNCTION", 
      "name": "os.tmpname"
    }
  ]
}